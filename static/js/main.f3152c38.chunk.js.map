{"version":3,"sources":["components/LoadIcon.jsx","components/Pagination.jsx","api/requests.js","App.jsx","index.js"],"names":["LoadIcon","react_default","a","createElement","className","randomstring","require","Pagination","_ref","page","prevPage","nextPage","pagesCount","changePage","currentPage","pageButtons","Array","fill","map","value","index","onClick","concat","key","generate","parseInt","URL","App","state","posts","isLoaded","postsPerPage","pageNum","_this","setState","changePostsPerPage","event","newPostPerPage","target","prevState","Math","ceil","length","spliceList","_this$state","slice","min","max","_this2","this","setTimeout","Object","asyncToGenerator","regenerator_default","mark","_callee","postsList","wrap","_context","prev","next","fetch","then","res","json","sent","err","error","stop","_this$state2","postsForRender","htmlFor","defaultValue","name","onChange","id","post","title","components_LoadIcon","components_Pagination","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.f3152c38.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst LoadIcon = () => {\r\n  return (\r\n    <div className=\"lds-ring\">\r\n      <div />\r\n      <div />\r\n      <div />\r\n      <div />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadIcon;\r\n","import React from 'react';\r\nconst randomstring = require('randomstring');\r\n\r\nconst Pagination = ({\r\n  prevPage,\r\n  nextPage,\r\n  pagesCount,\r\n  changePage,\r\n  currentPage\r\n}) => {\r\n  const fancyButtons = page => {\r\n    if (pagesCount < 6) {\r\n      let buttons = new Array(pagesCount)\r\n        .fill('')\r\n        .map((value, index) => index + 1);\r\n\r\n      return buttons;\r\n    } else if (page < 4) {\r\n      return [1, 2, 3, 4, 5, '...', pagesCount];\r\n    } else if (page >= 4 && page < pagesCount - 4) {\r\n      return [1, '...', page, page + 1, page + 2, '...', pagesCount];\r\n    } else {\r\n      return [\r\n        1,\r\n        '...',\r\n        pagesCount - 4,\r\n        pagesCount - 3,\r\n        pagesCount - 2,\r\n        pagesCount - 1,\r\n        pagesCount\r\n      ];\r\n    }\r\n  };\r\n\r\n  const pageButtons = fancyButtons(currentPage);\r\n\r\n  return (\r\n    <ul className=\"pagination\">\r\n      <li className=\"pagination__button\" onClick={prevPage}>\r\n        &laquo;\r\n      </li>\r\n      {pageButtons.map((value, index) => (\r\n        <li\r\n          className={`pagination__button ${\r\n            currentPage + 1 === value ? 'pagination__button--active' : null\r\n          }`}\r\n          key={randomstring.generate(5)}\r\n          onClick={parseInt(value, 10) ? () => changePage(value - 1) : null}\r\n        >\r\n          {value}\r\n        </li>\r\n      ))}\r\n      <li className=\"pagination__button\" onClick={nextPage}>\r\n        &raquo;\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","const URL = 'https://jsonplaceholder.typicode.com';\n\nexport const getPosts = () => fetch(`${URL}/posts`).then(res => res.json());\nexport const getUsers = () => fetch(`${URL}/users`).then(res => res.json());\nexport const getCom = () => fetch(`${URL}/comments`).then(res => res.json());\n","import React from 'react';\nimport './App.scss';\nimport LoadIcon from './components/LoadIcon';\nimport Pagination from './components/Pagination';\nimport { getPosts } from './api/requests';\n\nconst randomstring = require('randomstring');\n\nclass App extends React.Component {\n  state = {\n    posts: [],\n    isLoaded: false,\n    currentPage: 0,\n    postsPerPage: 10,\n    pagesCount: ''\n  };\n\n  componentDidMount() {\n    // 3ms response simulation\n    setTimeout(async () => {\n      const postsList = await getPosts();\n\n      try {\n        this.setState(prevState => ({\n          posts: postsList,\n          pagesCount: postsList.length / prevState.postsPerPage,\n          isLoaded: true\n        }));\n      } catch (err) {\n        this.setState({\n          error: err\n        });\n      }\n    }, 1000);\n  }\n\n  changePage = pageNum => {\n    this.setState({\n      currentPage: pageNum\n    });\n  };\n\n  changePostsPerPage = event => {\n    const newPostPerPage = event.target.value;\n\n    this.setState(prevState => ({\n      postsPerPage: newPostPerPage,\n      pagesCount: Math.ceil(prevState.posts.length / newPostPerPage)\n    }));\n  };\n\n  spliceList = () => {\n    const { posts, currentPage, postsPerPage } = this.state;\n\n    return posts.slice(\n      currentPage * postsPerPage,\n      (currentPage + 1) * postsPerPage\n    );\n  };\n\n  nextPage = () => {\n    this.setState(prevState => ({\n      currentPage: Math.min(prevState.currentPage + 1, prevState.pagesCount - 1)\n    }));\n  };\n\n  prevPage = () => {\n    this.setState(prevState => ({\n      currentPage: Math.max(prevState.currentPage - 1, 0)\n    }));\n  };\n\n  render() {\n    const { isLoaded, pagesCount, currentPage, postsPerPage } = this.state;\n    const postsForRender = this.spliceList();\n\n    return (\n      <div className=\"App\">\n        <div className=\"myApp\">\n          <h1>Simple List</h1>\n          <label htmlFor=\"postsPerPage\" className=\"postsPerPage\">\n            Per page:\n            <select\n              defaultValue=\"10\"\n              name=\"postsPerPage\"\n              onChange={this.changePostsPerPage}\n            >\n              <option name=\"3\" id=\"\">\n                3\n              </option>\n              <option name=\"5\" id=\"\">\n                5\n              </option>\n              <option name=\"10\" id=\"\">\n                10\n              </option>\n              <option name=\"20\" id=\"\">\n                20\n              </option>\n            </select>\n          </label>\n          <ul className=\"list\">\n            {isLoaded ? (\n              postsForRender.map(post => (\n                <li className=\"list__item\" key={randomstring.generate(5)}>\n                  {`${post.id}.`}\n                  <span className=\"list__item--title\">{post.title}</span>\n                </li>\n              ))\n            ) : (\n              <LoadIcon />\n            )}\n          </ul>\n          <Pagination\n            currentPage={currentPage}\n            changePage={this.changePage}\n            nextPage={this.nextPage}\n            prevPage={this.prevPage}\n            pagesCount={pagesCount}\n            postsPerPage={postsPerPage}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}